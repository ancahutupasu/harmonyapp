// Generated by view binder compiler. Do not edit!
package com.example.harmony.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.harmony.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AccountBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button Bookings;

  @NonNull
  public final Button Logout;

  @NonNull
  public final Button MyPoints;

  @NonNull
  public final Button PersonInformation;

  @NonNull
  public final Button Reviews;

  @NonNull
  public final Button Subscriptions;

  @NonNull
  public final LinearLayout linearLayout13;

  @NonNull
  public final LinearLayout linearLayout15;

  @NonNull
  public final LinearLayout linearLayout19;

  @NonNull
  public final TextView textView7;

  private AccountBinding(@NonNull ConstraintLayout rootView, @NonNull Button Bookings,
      @NonNull Button Logout, @NonNull Button MyPoints, @NonNull Button PersonInformation,
      @NonNull Button Reviews, @NonNull Button Subscriptions, @NonNull LinearLayout linearLayout13,
      @NonNull LinearLayout linearLayout15, @NonNull LinearLayout linearLayout19,
      @NonNull TextView textView7) {
    this.rootView = rootView;
    this.Bookings = Bookings;
    this.Logout = Logout;
    this.MyPoints = MyPoints;
    this.PersonInformation = PersonInformation;
    this.Reviews = Reviews;
    this.Subscriptions = Subscriptions;
    this.linearLayout13 = linearLayout13;
    this.linearLayout15 = linearLayout15;
    this.linearLayout19 = linearLayout19;
    this.textView7 = textView7;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AccountBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AccountBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.account, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AccountBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Bookings;
      Button Bookings = ViewBindings.findChildViewById(rootView, id);
      if (Bookings == null) {
        break missingId;
      }

      id = R.id.Logout;
      Button Logout = ViewBindings.findChildViewById(rootView, id);
      if (Logout == null) {
        break missingId;
      }

      id = R.id.MyPoints;
      Button MyPoints = ViewBindings.findChildViewById(rootView, id);
      if (MyPoints == null) {
        break missingId;
      }

      id = R.id.PersonInformation;
      Button PersonInformation = ViewBindings.findChildViewById(rootView, id);
      if (PersonInformation == null) {
        break missingId;
      }

      id = R.id.Reviews;
      Button Reviews = ViewBindings.findChildViewById(rootView, id);
      if (Reviews == null) {
        break missingId;
      }

      id = R.id.Subscriptions;
      Button Subscriptions = ViewBindings.findChildViewById(rootView, id);
      if (Subscriptions == null) {
        break missingId;
      }

      id = R.id.linearLayout13;
      LinearLayout linearLayout13 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout13 == null) {
        break missingId;
      }

      id = R.id.linearLayout15;
      LinearLayout linearLayout15 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout15 == null) {
        break missingId;
      }

      id = R.id.linearLayout19;
      LinearLayout linearLayout19 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout19 == null) {
        break missingId;
      }

      id = R.id.textView7;
      TextView textView7 = ViewBindings.findChildViewById(rootView, id);
      if (textView7 == null) {
        break missingId;
      }

      return new AccountBinding((ConstraintLayout) rootView, Bookings, Logout, MyPoints,
          PersonInformation, Reviews, Subscriptions, linearLayout13, linearLayout15, linearLayout19,
          textView7);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
